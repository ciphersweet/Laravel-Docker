version: "3.9"
services:

  # Nginx Service
  webserver:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: yuba/nginx:v0.1
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www/html
      - ./nginx/logs:/var/log/nginx/
    networks:
      - laravel_app
  
  # PHP Service
  app:
    build: 
      context: ./php/
      dockerfile: Dockerfile
    image: yuba/php-app:v0.1
    container_name: php-app
    restart: unless-stopped
    depends_on:
      - webserver
    tty: true
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel_app

  # Database Service
  database:
    build: 
      context: ./postgresql
      dockerfile: Dockerfile
    image: yuba/postgresql:v0.1
    container_name: postgresql-db
    restart: unless-stopped
    tty: true
    ports: 
      - "5432:5432"
    environment: 
      POSTGRES_PASSWORD: postgresql_password
      POSTGRES_USER: postgres
      POSTGRES_DB: laravel
    volumes: 
      - ./postgresql/postgres.conf:/usr/local/etc/postgres/postgres.conf
      - database-data:/var/lib/postgresql/data:delegated
    networks: 
      - laravel_app

  # Node Package Manager Service
  npm:
    image: node:16.16-alpine3.15
    container_name: npm
    user: "1000:1000"
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel_app

  # Redis Service
  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel_app

  # Mailhog Service
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports: 
      - "1025:1025"
      - "8025:8025"
    networks: 
      - laravel_app
  
# Define the network
networks:
  laravel_app:
    driver: bridge

# Define the volumes
volumes: 
  database-data:
    driver: local
